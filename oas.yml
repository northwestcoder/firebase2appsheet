openapi: 3.0.0
info:
  version: 1.0.0
  title: Appsheet Design Pattern
  description: Shows various collections in a RESTful design pattern. Used in Appsheet App.
servers:
  - url: 'https://firebase2appsheet-hb3so6eq3q-uc.a.run.app/'
paths:
  /persons:
    get:
      tags:
        - Person
      description: Return list of persons.
      summary: Returns list of existing persons.
      operationId: getPersons
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Person
      description: Create Person
      summary: Create a new person.
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Person
      description: Update Person completely
      summary: Update an existing person.
      operationId: updatePerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
  '/persons/{id}':
    get:
      tags:
        - Person
      description: Return person details.
      summary: Return details for an existing person.
      operationId: getPerson
      parameters:
        - $ref: '#/components/parameters/personIdPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Person
      description: Delete person.
      summary: Delete an existing person.
      operationId: deletePerson
      parameters:
        - $ref: '#/components/parameters/personIdPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /events:
    get:
      tags:
        - Event
      description: Return list of Events.
      summary: Returns list of existing events.
      operationId: getEvents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Event
      description: Create Event
      summary: Create a new event.
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Event
      description: Update Event completely
      summary: Update an existing event.
      operationId: updateEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
  '/events/{id}':
    get:
      tags:
        - Event
      description: Return event details.
      summary: Return details for an existing event.
      operationId: getEvent
      parameters:
        - $ref: '#/components/parameters/eventIdPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Event
      description: Delete event.
      summary: Delete an existing event.
      operationId: deleteEvent
      parameters:
        - $ref: '#/components/parameters/eventIdPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-APIKey
  parameters:
    personIdPath:
      in: path
      name: id
      description: The person identifier.
      required: true
      schema:
        type: string
    eventIdPath:
      in: path
      name: id
      description: The event identifier.
      required: true
      schema:
        type: string
  schemas:
    Person:
      type: object
      required:
        - id
        - Name
      additionalProperties: true
      properties:
        id:
          type: string
        Name:
          type: string
        mobile:
          type: string
        birthdate:
          type: string
          format: date
        tenure:
          type: integer
        address:
          type: string
        email:
          type: string
        photo:
          type: string
        teams:
          type: string
        active:
          type: boolean
    PersonResponse:
      type: object
      properties:
        persons:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    Event:
      type: object
      required:
        - id
        - Name
        - personid
      additionalProperties: true
      properties:
        id:
          type: string
        Name:
          type: string
        personid:
          type: string
        type:
          type: string
        timestamp:
          type: string
          format: date-time
        duration:
          type: integer
        address:
          type: string
        latlong:
          type: string
        photo:
          type: string
        barcode:
          type: string
        notes:
          type: string
    EventResponse:
      type: object
      properties:
        persons:
          type: array
          items:
            $ref: '#/components/schemas/Event'            
    Error:
      type: object
      properties:
        code:
          type: string
        userMessage:
          type: string
        systemMessage:
          type: string
    ErrorResponse:
      type: object
      properties:
        error:
          description: Used to pass error information in a response.
          type: array
          items:
            $ref: '#/components/schemas/Error'